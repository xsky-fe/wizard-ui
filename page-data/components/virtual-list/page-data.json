{"componentChunkName":"component---src-templates-components-post-js","path":"/components/virtual-list/","result":{"data":{"mdx":{"id":"6e9d80ea-c154-59b2-9d6f-b57379464180","excerpt":"当一个资源数据量很大时，一次加载数据会导致浏览器页面卡顿甚至崩溃，VirtualList 支持根据鼠标滚动加载数据，同时销毁超出数据的  DOM  结构，保证页面的流畅性。 基本用法 rowRenderer  对列表中每行元素进行渲染，可做到动态布局（每列不等高时重新计算并重新渲染）; data…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"VirtualList 滚动加载\",\n  \"date\": \"2019-08-20T00:00:00.000Z\",\n  \"author\": \"wangkailang\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u5F53\\u4E00\\u4E2A\\u8D44\\u6E90\\u6570\\u636E\\u91CF\\u5F88\\u5927\\u65F6\\uFF0C\\u4E00\\u6B21\\u52A0\\u8F7D\\u6570\\u636E\\u4F1A\\u5BFC\\u81F4\\u6D4F\\u89C8\\u5668\\u9875\\u9762\\u5361\\u987F\\u751A\\u81F3\\u5D29\\u6E83\\uFF0CVirtualList \\u652F\\u6301\\u6839\\u636E\\u9F20\\u6807\\u6EDA\\u52A8\\u52A0\\u8F7D\\u6570\\u636E\\uFF0C\\u540C\\u65F6\\u9500\\u6BC1\\u8D85\\u51FA\\u6570\\u636E\\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DOM\"), \" \\u7ED3\\u6784\\uFF0C\\u4FDD\\u8BC1\\u9875\\u9762\\u7684\\u6D41\\u7545\\u6027\\u3002\"), mdx(\"h2\", null, \"\\u57FA\\u672C\\u7528\\u6CD5\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rowRenderer\"), \" \\u5BF9\\u5217\\u8868\\u4E2D\\u6BCF\\u884C\\u5143\\u7D20\\u8FDB\\u884C\\u6E32\\u67D3\\uFF0C\\u53EF\\u505A\\u5230\\u52A8\\u6001\\u5E03\\u5C40\\uFF08\\u6BCF\\u5217\\u4E0D\\u7B49\\u9AD8\\u65F6\\u91CD\\u65B0\\u8BA1\\u7B97\\u5E76\\u91CD\\u65B0\\u6E32\\u67D3\\uFF09;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"data\"), \" \\u6307\\u8981\\u6E32\\u67D3\\u8D44\\u6E90\\u6570\\u636E\\uFF0C\\u53EF\\u7ED3\\u5408 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onQueryChange\"), \" \\u505A\\u5F02\\u6B65\\u52A0\\u8F7D\\u3002\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"isShow\",\n    \"isShow\": true\n  }), \"const rowRenderer = ({\\n  index,\\n  item, // item: <T>\\u4E3A\\u6570\\u7EC4\\u4E2D\\u5BF9\\u5E94\\u9879\\n  prevItem, // \\u524D\\u4E00\\u9879\\n  nextItem, // \\u540E\\u4E00\\u9879\\n  style, // row\\u5BF9\\u5E94\\u7684style\\uFF0C\\u9700\\u8981\\u5E94\\u7528\\u5728row\\u5BF9\\u5E94\\u7684dom\\u4E0A\\uFF0C\\u53EF\\u4EE5\\u4E0E\\u81EA\\u5B9A\\u4E49style\\u5408\\u5E76\\n}) => <p key={index} style={style}>{item}</p>;\\n\\n<VirtualList\\n  rowHeight={34} // \\u6BCF\\u884C\\u7684\\u9AD8\\u5EA6\\n  rowRenderer={rowRenderer}\\n  data={[]}\\n  onQueryChange={handleQueryChange}\\n  height={210} // List wrapper\\u9AD8\\u5EA6\\uFF0Cdefault 450\\n/>\\n\")), mdx(\"h2\", null, \"\\u4EE3\\u7801\\u6F14\\u793A\"), mdx(\"h3\", null, \"\\u7A7A\\u6570\\u7EC4\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<div className=\\\"box\\\">\\n  <VirtualList\\n    rowHeight={35}\\n    rowRenderer={({ style, index }) => <div className=\\\"list-item\\\" style={style} key={index}>item-{index}</div>}\\n    data={[]}\\n    height={35}\\n    isFetching={false}\\n    isReloading={false}\\n    totalCount={0}\\n  />\\n</div>\\n\")), mdx(\"h3\", null, \"\\u52A0\\u8F7D\\u65B0\\u6570\\u636E\"), mdx(\"p\", null, \"\\u771F\\u5B9E\\u573A\\u666F\\u4E2D\\u9F20\\u6807\\u6EDA\\u52A8\\uFF0C\\u9875\\u9762\\u4E0B\\u6ED1\\u8FC7\\u7A0B\\u4E2D\\u4F1A\\u52A0\\u8F7D\\u65B0\\u7684\\u6570\\u636E\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<div className=\\\"box\\\">\\n  <VirtualList\\n    rowHeight={35}\\n    rowRenderer={({ style, index }) => <div className=\\\"list-item\\\" style={style} key={index}>item-{index}</div>}\\n    data={[1]}\\n    height={70}\\n    isFetching={true}\\n    isReloading={false}\\n    totalCount={1}\\n  />\\n</div>\\n\")), mdx(\"h3\", null, \"\\u91CD\\u65B0\\u52A0\\u8F7D\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<div className=\\\"box\\\">\\n  <VirtualList\\n    rowHeight={35}\\n    rowRenderer={({ style, index }) => <div className=\\\"list-item\\\" style={style} key={index}>item-{index}</div>}\\n    data={[]}\\n    height={35}\\n    isFetching={true}\\n    isReloading={true}\\n    totalCount={0}\\n  />\\n</div>\\n\")), mdx(\"h3\", null, \"\\u52A0\\u8F7D\\u5B8C\\u6210\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<div className=\\\"box\\\">\\n  <VirtualList\\n    rowHeight={35}\\n    rowRenderer={({ style, index }) => <div className=\\\"list-item\\\" style={style} key={index}>item-{index}</div>}\\n    data={[1]}\\n    height={70}\\n    isFetching={false}\\n    isReloading={false}\\n    totalCount={1}\\n  />\\n</div>\\n\")), mdx(\"h3\", null, \"\\u5F02\\u6B65\\u7B49\\u9AD8\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"() => {\\n  const resName = \\\"list\\\";\\n  const rowRenderer = ({ style, index }) => <div className=\\\"list-item\\\" style={style} key={index}>item-{index}</div>\\n  const listRef = React.useRef(null);\\n  const [fetching, setFetch] = React.useState(false);\\n  const [datas, setDatas] = React.useState([]);\\n  const [totalCount, setTotalCount] = React.useState(0);\\n  const [count, setCount] = React.useState(0);\\n  async function handleQueryChange(query) {\\n    setFetch(true);\\n    const actionResult = await getMockDatas(query, 180, resName);\\n    setFetch(false);\\n    const totalCount = actionResult.response.paging.totalCount;\\n    const lists = actionResult.response.lists;\\n    setTotalCount(totalCount);\\n    setDatas(datas.concat(lists));\\n  }\\n  React.useEffect(() => {\\n    handleQueryChange({\\n      limit: 30,\\n      offset: 0,\\n    })\\n  }, []);\\n  React.useEffect(() => {\\n    const existLists = listRef.current && listRef.current.querySelectorAll('.VirtualList > *');\\n    setCount(existLists ? existLists.length : 0);\\n  }, [datas]);\\n  return (\\n    <div>\\n      <p>\\u603B\\u5171 {totalCount} \\u6761\\u6570\\u636E, \\u83B7\\u53D6\\u4E86 {datas.length} \\u6761\\u3002</p>\\n      <p>\\u6E32\\u67D3\\u5230 DOM \\u4E2D\\u7684\\u6761\\u6570\\u662F\\uFF1A {count}</p>\\n      <div className=\\\"box\\\" ref={listRef}>\\n        <VirtualList\\n          rowHeight={35}\\n          rowRenderer={rowRenderer}\\n          height={210}\\n          data={datas}\\n          query={{\\n            limit: 30,\\n            offset: 0,\\n          }}\\n          onQueryChange={handleQueryChange}\\n          totalCount={totalCount}\\n          isFetching={fetching}\\n          noMore={datas.length === totalCount}\\n        />\\n      </div>\\n    </div>\\n  )\\n}\\n\")), mdx(\"h3\", null, \"\\u5F02\\u6B65\\u4E0D\\u7B49\\u9AD8\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"row\"), \" \\u4E0D\\u7B49\\u9AD8\\u65F6\\u9700\\u8981\\u8BA1\\u7B97\\u8C03\\u6574\\uFF0C\\u8BBE\\u7F6E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isEstimate\"), \" \\u4E3A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \"\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"() => {\\n  const resName = \\\"list\\\";\\n  const rowRenderer = i => {\\n    const randomHeight = `${35 + (i.index%5 * 4)}px`;\\n    return (\\n      <div className=\\\"list-item\\\" style={{...i.style, height: randomHeight}} key={i.index}>\\n        <div>{resName}-{i.index + 1}</div>\\n        <span>height: {randomHeight}, transform: {i.style.transform}</span>\\n      </div>\\n    )\\n  };\\n  const listRef = React.useRef(null);\\n  const [fetching, setFetch] = React.useState(false);\\n  const [datas, setDatas] = React.useState([]);\\n  const [totalCount, setTotalCount] = React.useState(0);\\n  const [count, setCount] = React.useState(0);\\n  async function handleQueryChange(query) {\\n    setFetch(true);\\n    const actionResult = await getMockDatas(query, 180, resName);\\n    setFetch(false);\\n    const totalCount = actionResult.response.paging.totalCount;\\n    const lists = actionResult.response.lists;\\n    setTotalCount(totalCount);\\n    setDatas(datas.concat(lists));\\n  }\\n  React.useEffect(() => {\\n    handleQueryChange({\\n      limit: 30,\\n      offset: 0,\\n    })\\n  }, []);\\n  React.useEffect(() => {\\n    const existLists = listRef.current && listRef.current.querySelectorAll('.VirtualList > *');\\n    setCount(existLists ? existLists.length : 0);\\n  }, [datas]);\\n  return (\\n    <div>\\n      <p>\\u603B\\u5171 {totalCount} \\u6761\\u6570\\u636E, \\u83B7\\u53D6\\u4E86 {datas.length} \\u6761\\u3002</p>\\n      <p>\\u6E32\\u67D3\\u5230 DOM \\u4E2D\\u7684\\u6761\\u6570\\u662F\\uFF1A {count}</p>\\n      <div className=\\\"box\\\" ref={listRef}>\\n        <VirtualList\\n          rowHeight={35}\\n          rowRenderer={rowRenderer}\\n          height={210}\\n          data={datas}\\n          query={{\\n            limit: 30,\\n            offset: 0,\\n          }}\\n          onQueryChange={handleQueryChange}\\n          totalCount={totalCount}\\n          isFetching={fetching}\\n          noMore={datas.length === totalCount}\\n          isEstimate\\n        />\\n      </div>\\n    </div>\\n  )\\n}\\n\")), mdx(\"h2\", null, \"\\u6CE8\\u610F\\u4E8B\\u9879\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rowHeight\"), \"\\u51FD\\u6570\\u52A8\\u6001\\u6539\\u53D8\\u8FD4\\u56DE\\u9AD8\\u5EA6\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u5E76\\u4E0D\\u4F1A rerender\"), \",\\u9700\\u8981\\u4E3B\\u52A8\\u89E6\\u53D1 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"recomputeRowHeight\"), \" \\u65B9\\u6CD5\\u3002\"), mdx(\"h2\", null, \"\\u4F30\\u8BA1\\u6A21\\u5F0F\\u4E0E Debug\"), mdx(\"p\", null, \"\\u5BF9\\u4E8E\\u9AD8\\u5EA6\\u65E0\\u6CD5\\u5B8C\\u5168\\u786E\\u5B9A\\u7684 row\\uFF08\\u5982\\u5185\\u5BB9\\u9AD8\\u5EA6\\u4E0D\\u56FA\\u5B9A\\u7B49\\uFF09\\uFF0C\\u4F9D\\u7136\\u9700\\u8981\\u7ED9\\u51FA\\u4E00\\u4E2A\\u8F83\\u51C6\\u786E\\u7684 rowHeight\\u3002\\u540C\\u65F6\\u8BBE\\u7F6E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isEstimate={true}\"), \"\\uFF0CVirtualList\\u4F1A\\u5728render\\u7ED3\\u675F\\u540E\\u5BF9\\u53EF\\u89C6dom\\u8FDB\\u884C\\u8BA1\\u7B97\\uFF0C\\u5E76\\u4E0E\\u5BF9\\u5E94\\u7684 rowHeight \\u6BD4\\u8F83\\u3002\\u5982\\u679C\\u5B9E\\u9645\\u9AD8\\u5EA6\\u4E0E rowHeight \\u6307\\u5B9A\\u9AD8\\u5EA6\\u4E0D\\u540C\\uFF0C\\u5219\\u4F1A\\u7528\\u5B9E\\u9645\\u9AD8\\u5EA6 rerender\\uFF0C\\u76F4\\u81F3\\u5B8C\\u5168\\u4E00\\u81F4\\u3002\"), mdx(\"p\", null, \"\\u7531\\u4E8E VirtualList \\u5DF2\\u5C06 dom \\u6570\\u91CF\\u63A7\\u5236\\u5728\\u53EF\\u63A7\\u8303\\u56F4\\u4E4B\\u5185\\uFF0C\\u56E0\\u6B64\\u904D\\u5386\\u8BA1\\u7B97\\u518D\\u91CD\\u65B0\\u6E32\\u67D3\\u7684\\u5F00\\u9500\\u5728\\u53EF\\u627F\\u53D7\\u8303\\u56F4\\u5185\\uFF0C\\u4F46\\u5BF9\\u4E8E\\u53EF\\u4EE5\\u786E\\u5B9A\\u9AD8\\u5EA6\\u7684\\u5217\\u8868\\u4ECD\\u7136\\u8981\\u907F\\u514D\\u4F7F\\u7528\\u4F30\\u8BA1\\u6A21\\u5F0F\\u3002\"), mdx(\"p\", null, \"\\u540C\\u65F6\\u4F30\\u8BA1\\u6A21\\u5F0F\\u63D0\\u4F9B debug \\u53C2\\u6570\\u65B9\\u4FBF\\u5F00\\u53D1\\u65F6\\u786E\\u5B9A dom \\u7684\\u771F\\u5B9E\\u9AD8\\u5EA6\\u3002\\u540C\\u65F6\\u8BBE\\u7F6E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isEstimate={true}\"), \" \\u548C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"debug={true}\"), \"\\uFF0CVirtualList \\u4F1A\\u6253\\u5370\\u771F\\u5B9E\\u9AD8\\u5EA6\\u4E0E rowHeight \\u4E0D\\u540C\\u7684 row \\u5BF9\\u5E94\\u7684\\u4FE1\\u606F\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"isShow\",\n    \"isShow\": true\n  }), \"warning: Index 1 estimate height is 16, real height is 18.\\n\")), mdx(\"h2\", null, \"API\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/components/virtual-list/"},"headings":[{"value":"基本用法","depth":2},{"value":"代码演示","depth":2},{"value":"空数组","depth":3},{"value":"加载新数据","depth":3},{"value":"重新加载","depth":3},{"value":"加载完成","depth":3},{"value":"异步等高","depth":3},{"value":"异步不等高","depth":3},{"value":"注意事项","depth":2},{"value":"估计模式与 Debug","depth":2},{"value":"API","depth":2}],"frontmatter":{"title":"VirtualList 滚动加载","date":"2019-08-20","author":"wangkailang"}}},"pageContext":{"slug":"/components/virtual-list/","previous":{"fields":{"slug":"/components/grid/"},"frontmatter":{"title":"Grid 布局系统"}},"next":{"fields":{"slug":"/components/clearfix/"},"frontmatter":{"title":"Clearfix 清除修订"}},"propDatas":{"node":{"fields":{"slug":"/VirtualList/"},"displayName":"VirtualList","props":[{"name":"rowHeight","type":{"name":"union","value":[{"name":"func"},{"name":"number"}]},"defaultValue":null,"required":true,"description":{"text":"行高"}},{"name":"rowRenderer","type":{"name":"func","value":null},"defaultValue":null,"required":true,"description":{"text":"渲染 row UI"}},{"name":"height","type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"defaultValue":{"value":"'100%'"},"required":false,"description":{"text":"可见高度"}},{"name":"data","type":{"name":"array","value":null},"defaultValue":{"value":"[]"},"required":false,"description":{"text":"数据"}},{"name":"isEstimate","type":{"name":"bool","value":null},"defaultValue":null,"required":false,"description":{"text":"是否开启计算"}},{"name":"onQueryChange","type":{"name":"func","value":null},"defaultValue":null,"required":false,"description":{"text":"监听 query 改变"}},{"name":"query","type":{"name":"object","value":null},"defaultValue":null,"required":false,"description":{"text":"确定异步数据的 offset 和 limit"}},{"name":"totalCount","type":{"name":"number","value":null},"defaultValue":null,"required":false,"description":{"text":"总数"}},{"name":"isFetching","type":{"name":"bool","value":null},"defaultValue":null,"required":false,"description":{"text":"是否在获取数据"}},{"name":"runwayItems","type":{"name":"number","value":null},"defaultValue":{"value":"50"},"required":false,"description":{"text":"行高"}},{"name":"runwayItemsOppsite","type":{"name":"number","value":null},"defaultValue":{"value":"20"},"required":false,"description":{"text":"行高"}},{"name":"loader","type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"defaultValue":{"value":"<p className=\"VirtualList__loader\">数据加载中</p>"},"required":false,"description":{"text":"数据加载中时展示"}},{"name":"placeholder","type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"defaultValue":{"value":"<p className=\"VirtualList__placeholder\">暂无数据</p>"},"required":false,"description":{"text":"默认展示文本"}},{"name":"noMore","type":{"name":"bool","value":null},"defaultValue":null,"required":false,"description":{"text":"是否展示没有多余的数据"}},{"name":"noMoreHint","type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"defaultValue":{"value":"<p className=\"VirtualList__no-more-hint\">没有更多信息</p>"},"required":false,"description":{"text":"没有需要加载的数据时展示"}},{"name":"debug","type":{"name":"bool","value":null},"defaultValue":{"value":"true"},"required":false,"description":{"text":"Debug"}}]}}}}}