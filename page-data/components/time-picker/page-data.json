{"componentChunkName":"component---src-templates-components-post-js","path":"/components/time-picker/","result":{"data":{"mdx":{"id":"ecdff3f4-91d3-5e9d-9078-7a24e12debc0","excerpt":"用户输入一个时间，可以点击标准输入框，弹出时间面板进行选择。 基本用法 默认展示 便利用法 分钟固定为 0 的小时选择 选择时间区间时，设置 hourStart 选择开始时间。 分钟固定为 59 的小时选择 选择时间区间时，设置 hourEnd…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"TimePicker 时间选择框\",\n  \"date\": \"2019-06-18T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u7528\\u6237\\u8F93\\u5165\\u4E00\\u4E2A\\u65F6\\u95F4\\uFF0C\\u53EF\\u4EE5\\u70B9\\u51FB\\u6807\\u51C6\\u8F93\\u5165\\u6846\\uFF0C\\u5F39\\u51FA\\u65F6\\u95F4\\u9762\\u677F\\u8FDB\\u884C\\u9009\\u62E9\\u3002\"), mdx(\"h2\", null, \"\\u57FA\\u672C\\u7528\\u6CD5\"), mdx(\"h3\", null, \"\\u9ED8\\u8BA4\\u5C55\\u793A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \" <TimePicker/>\\n\")), mdx(\"h2\", null, \"\\u4FBF\\u5229\\u7528\\u6CD5\"), mdx(\"h3\", null, \"\\u5206\\u949F\\u56FA\\u5B9A\\u4E3A 0 \\u7684\\u5C0F\\u65F6\\u9009\\u62E9\"), mdx(\"p\", null, \"\\u9009\\u62E9\\u65F6\\u95F4\\u533A\\u95F4\\u65F6\\uFF0C\\u8BBE\\u7F6E hourStart \\u9009\\u62E9\\u5F00\\u59CB\\u65F6\\u95F4\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"() => {\\n  const [ value, setValue ] = React.useState(null);\\n  const onChange = time => {\\n    setValue(time && time.format('HH:mm'));\\n  }\\n  return (\\n    <div>\\n      <p>\\u9009\\u4E2D\\u65F6\\u95F4\\uFF1A{value}</p>\\n      <TimePicker\\n        hourStart\\n        onChange={onChange}\\n      />\\n    </div>\\n  );\\n}\\n\")), mdx(\"h3\", null, \"\\u5206\\u949F\\u56FA\\u5B9A\\u4E3A 59 \\u7684\\u5C0F\\u65F6\\u9009\\u62E9\"), mdx(\"p\", null, \"\\u9009\\u62E9\\u65F6\\u95F4\\u533A\\u95F4\\u65F6\\uFF0C\\u8BBE\\u7F6E hourEnd \\u9009\\u62E9\\u7ED3\\u675F\\u65F6\\u95F4\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"() => {\\n  const [ value, setValue ] = React.useState(null);\\n  const onChange = time => {\\n    setValue(time && time.format('HH:mm'));\\n  }\\n  return (\\n    <div>\\n      <p>\\u9009\\u4E2D\\u65F6\\u95F4\\uFF1A{value}</p>\\n      <TimePicker\\n        hourEnd\\n        onChange={onChange}\\n      />\\n    </div>\\n  );\\n}\\n\")), mdx(\"h3\", null, \"\\u65F6\\u95F4\\u533A\\u95F4\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"() => {\\n  const [ start, setStart ] = React.useState(null);\\n  const [ end, setEnd ] = React.useState(null);\\n  const onStartChange = time => {\\n    setStart(time && time.format('HH:mm'));\\n  }\\n  const onEndChange = time => {\\n    setEnd(time && time.format('HH:mm'));\\n  }\\n  return (\\n    <div>\\n      <p>\\u9009\\u4E2D\\u65F6\\u95F4\\u533A\\u95F4\\uFF1A{start || '\\u5F00\\u59CB\\u65F6\\u95F4'} ~ {end || '\\u7ED3\\u675F\\u65F6\\u95F4'}</p>\\n      <div>\\n        <TimePicker\\n          hourStart\\n          onChange={onStartChange}\\n          placeholder=\\\"\\u5F00\\u59CB\\u65F6\\u95F4\\\"\\n        />\\n        <span style={{ padding: '0 10px' }} >\\n        -\\n        </span>\\n        <TimePicker\\n          hourEnd\\n          onChange={onEndChange}\\n          placeholder=\\\"\\u7ED3\\u675F\\u65F6\\u95F4\\\"\\n        />\\n      </div>\\n    </div>\\n  );\\n}\\n\")), mdx(\"h2\", null, \"\\u5176\\u4ED6\\u8BBE\\u7F6E\"), mdx(\"h3\", null, \"\\u9690\\u85CF\\u6E05\\u7A7A\\u64CD\\u4F5C\"), mdx(\"p\", null, \"\\u8BBE\\u7F6E\\u9690\\u85CF\\u201D\\u6E05\\u7A7A\\u201C\\u64CD\\u4F5C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"() => {\\n  const [ value, setValue ] = React.useState(null);\\n  const onChange = time => {\\n    setValue(time && time.format('HH:mm'));\\n  }\\n  return (\\n    <div>\\n      <p>\\u9009\\u4E2D\\u65F6\\u95F4\\uFF1A{value}</p>\\n      <TimePicker\\n        allowEmpty={false}\\n        onChange={onChange}\\n      />\\n    </div>\\n  );\\n}\\n\")), mdx(\"h2\", null, \"API\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/components/time-picker/"},"headings":[{"value":"基本用法","depth":2},{"value":"默认展示","depth":3},{"value":"便利用法","depth":2},{"value":"分钟固定为 0 的小时选择","depth":3},{"value":"分钟固定为 59 的小时选择","depth":3},{"value":"时间区间","depth":3},{"value":"其他设置","depth":2},{"value":"隐藏清空操作","depth":3},{"value":"API","depth":2}],"frontmatter":{"title":"TimePicker 时间选择框","date":"2019-06-18","author":null}}},"pageContext":{"slug":"/components/time-picker/","previous":{"fields":{"slug":"/components/sub-menu/"},"frontmatter":{"title":"SubMenu 级连菜单"}},"next":{"fields":{"slug":"/components/modal/"},"frontmatter":{"title":"Modal 对话框"}},"propDatas":{"node":{"fields":{"slug":"/TimePicker/"},"displayName":"TimePicker","props":[{"name":"hourStart","type":{"name":"bool","value":null},"defaultValue":null,"required":false,"description":{"text":"分钟固定为 0 的小时选择"}},{"name":"hourEnd","type":{"name":"bool","value":null},"defaultValue":null,"required":false,"description":{"text":"分钟固定为 59 的小时选择"}},{"name":"placeholder","type":{"name":"string","value":null},"defaultValue":{"value":"'请选择时间'"},"required":false,"description":{"text":"默认展示文本"}},{"name":"onChange","type":{"name":"func","value":null},"defaultValue":null,"required":false,"description":{"text":"改变时间会触发 onChange 执行"}},{"name":"allowEmpty","type":{"name":"bool","value":null},"defaultValue":{"value":"true"},"required":false,"description":{"text":"是否允许为空"}}]}}}}}