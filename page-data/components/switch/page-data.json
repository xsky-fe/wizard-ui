{"componentChunkName":"component---src-templates-components-post-js","path":"/components/switch/","result":{"data":{"mdx":{"id":"149f3849-9c85-5ef0-94f5-a5f4317c2352","excerpt":"开关选择器。 何时使用 表示两种相互对立的状态间的切换，多用于触发「开/关」。选中时的内容支持响应式。 基本用法 默认展示 禁用 开关禁止操作，视觉上 UI 颜色会变淡。 交互 点击 Switch 开关切换。 API","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Switch 开关\",\n  \"date\": \"2019-06-13T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u5F00\\u5173\\u9009\\u62E9\\u5668\\u3002\"), mdx(\"h2\", null, \"\\u4F55\\u65F6\\u4F7F\\u7528\"), mdx(\"p\", null, \"\\u8868\\u793A\\u4E24\\u79CD\\u76F8\\u4E92\\u5BF9\\u7ACB\\u7684\\u72B6\\u6001\\u95F4\\u7684\\u5207\\u6362\\uFF0C\\u591A\\u7528\\u4E8E\\u89E6\\u53D1\\u300C\\u5F00/\\u5173\\u300D\\u3002\\u9009\\u4E2D\\u65F6\\u7684\\u5185\\u5BB9\\u652F\\u6301\\u54CD\\u5E94\\u5F0F\\u3002\"), mdx(\"h2\", null, \"\\u57FA\\u672C\\u7528\\u6CD5\"), mdx(\"h3\", null, \"\\u9ED8\\u8BA4\\u5C55\\u793A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<div>\\n  <Switch />\\n  <Switch checked />\\n</div>\\n\")), mdx(\"h3\", null, \"\\u7981\\u7528\"), mdx(\"p\", null, \"\\u5F00\\u5173\\u7981\\u6B62\\u64CD\\u4F5C\\uFF0C\\u89C6\\u89C9\\u4E0A UI \\u989C\\u8272\\u4F1A\\u53D8\\u6DE1\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<div>\\n  <Switch disabled />\\n  <Switch checked disabled />\\n</div>\\n\")), mdx(\"h3\", null, \"\\u4EA4\\u4E92\"), mdx(\"p\", null, \"\\u70B9\\u51FB Switch \\u5F00\\u5173\\u5207\\u6362\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"() => {\\n  const [ checked, setCheck ] = React.useState(false);\\n  const handleChange = checked => setCheck(checked)\\n  return (\\n    <div>\\n      <Switch checked={checked} onChange={handleChange}/>\\n      <p>{checked ? '\\u5F00\\u542F' : '\\u5173\\u95ED'}</p>\\n    </div>\\n  )\\n}\\n\")), mdx(\"h2\", null, \"API\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/components/switch/"},"headings":[{"value":"何时使用","depth":2},{"value":"基本用法","depth":2},{"value":"默认展示","depth":3},{"value":"禁用","depth":3},{"value":"交互","depth":3},{"value":"API","depth":2}],"frontmatter":{"title":"Switch 开关","date":"2019-06-13","author":null}}},"pageContext":{"slug":"/components/switch/","previous":{"fields":{"slug":"/components/modal/"},"frontmatter":{"title":"Modal 对话框"}},"next":{"fields":{"slug":"/components/tree/"},"frontmatter":{"title":"Tree 树级组件"}},"propDatas":{"node":{"fields":{"slug":"/Switch/"},"displayName":"Switch","props":[{"name":"disabled","type":{"name":"bool","value":null},"defaultValue":null,"required":false,"description":{"text":"是否禁用；"}},{"name":"checked","type":{"name":"bool","value":null},"defaultValue":null,"required":false,"description":{"text":"指定当前是否选中；"}},{"name":"inline","type":{"name":"bool","value":null},"defaultValue":null,"required":false,"description":{"text":"是否同行显示；"}},{"name":"name","type":{"name":"string","value":null},"defaultValue":null,"required":false,"description":{"text":"为了兼容 e2e 测试中的 page-object 选择器；"}},{"name":"onChange","type":{"name":"func","value":null},"defaultValue":null,"required":false,"description":{"text":"值变化时候的回调函数；"}}]}}}}}