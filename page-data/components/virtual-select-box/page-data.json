{"componentChunkName":"component---src-templates-components-post-js","path":"/components/virtual-select-box/","result":{"data":{"mdx":{"id":"f5ed116f-a89a-5e1f-b43a-a8073b508046","excerpt":"在大量异步数据中选择需要的数据，支持滚动加载和搜索； 支持单选和多选。 限制条件 异步  API  支持获取部分数据（分页），query 的格式如下： 表示从第 20 条数据开始取10 条数据。 基本用法 fetchData  异步数据  API ,  Promise…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"VirtualSelectBox 滚动下拉\",\n  \"date\": \"2019-08-28T00:00:00.000Z\",\n  \"author\": \"wangkailang\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5728\\u5927\\u91CF\\u5F02\\u6B65\\u6570\\u636E\\u4E2D\\u9009\\u62E9\\u9700\\u8981\\u7684\\u6570\\u636E\\uFF0C\\u652F\\u6301\\u6EDA\\u52A8\\u52A0\\u8F7D\\u548C\\u641C\\u7D22\\uFF1B\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u652F\\u6301\\u5355\\u9009\\u548C\\u591A\\u9009\\u3002\")), mdx(\"h2\", null, \"\\u9650\\u5236\\u6761\\u4EF6\"), mdx(\"p\", null, \"\\u5F02\\u6B65 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"API\"), \" \\u652F\\u6301\\u83B7\\u53D6\\u90E8\\u5206\\u6570\\u636E\\uFF08\\u5206\\u9875\\uFF09\\uFF0Cquery \\u7684\\u683C\\u5F0F\\u5982\\u4E0B\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"isShow\",\n    \"isShow\": true\n  }), \"{\\n  // \\u53D6 10 \\u6761\\u6570\\u636E\\n  limit: 10,\\n  // \\u4ECE\\u7B2C 20 \\u6761\\u6570\\u636E\\u5F00\\u59CB\\u53D6\\n  offset: 20\\n}\\n\")), mdx(\"p\", null, \"\\u8868\\u793A\\u4ECE\\u7B2C 20 \\u6761\\u6570\\u636E\\u5F00\\u59CB\\u53D610 \\u6761\\u6570\\u636E\\u3002\"), mdx(\"h2\", null, \"\\u57FA\\u672C\\u7528\\u6CD5\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fetchData\"), \" \\u5F02\\u6B65\\u6570\\u636E \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"API\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Promise\"), \" \\u8FD4\\u56DE\\u6570\\u636E\\u7ED3\\u6784\\u6CA1\\u6709\\u4E25\\u683C\\u8981\\u6C42\\uFF0C\\u901A\\u7528\\u6A21\\u62DF\\u7ED3\\u6784\\u5982\\u4E0B\\uFF1A\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"isShow\",\n    \"isShow\": true\n  }), \"const fetchData = () => new Promise((resolve, reject) => {\\n  setTimeout(() => {\\n    resolve({\\n      response: {\\n        resNames: [xxx],\\n        paging: {\\n          totalCount: xxx\\n        }\\n      }\\n    });\\n    reject({\\n      error: xxx,\\n    });\\n  }, time);\\n});\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"item\"), \" \\u9009\\u4E2D\\u9879\\uFF0C\\u5141\\u8BB8\\u4E3A\\u7A7A\\u5BF9\\u8C61 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{}\"), \" \\u6216\\u8005 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\"\\\"\"))), mdx(\"p\", null, \"\\u5177\\u4F53\\u4F7F\\u7528\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"isShow\",\n    \"isShow\": true\n  }), \"<VirtualSelectBox\\n  item={item}\\n  fetchData={getDatas}\\n/>\\n\")), mdx(\"h2\", null, \"\\u4EE3\\u7801\\u6F14\\u793A\"), mdx(\"h3\", null, \"\\u7A7A\\u6570\\u7EC4\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"() => {\\n  const limit = 30;\\n  const getEmptyDatas = () => new Promise(resolve => {\\n    setTimeout(() => {\\n      resolve({\\n        response: {\\n          resNames: [],\\n          paging: {\\n            totalCount: 0\\n          }\\n        }\\n      });\\n    }, 500);\\n  });\\n  async function fetchEmptyDatas(isReloading, dQuery = {}) {\\n    const actionResult = await getEmptyDatas(dQuery);\\n    const items = actionResult.response.resNames;\\n    const totalCount = actionResult.response.paging.totalCount;\\n    const query = {\\n      ...dQuery,\\n      limit,\\n      offset: 0,\\n    };\\n    return {\\n      query,\\n      items,\\n      totalCount,\\n    }\\n  }\\n  return (\\n    <VirtualSelectBox\\n      item={{}}\\n      fetchData={fetchEmptyDatas}\\n    />\\n  );\\n}\\n\")), mdx(\"h3\", null, \"\\u6709\\u6570\\u636E\\u5355\\u9009\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"() => {\\n  const limit = 30;\\n  const TOTAL = 180;\\n  const getDatas = query => new Promise(resolve => {\\n    setTimeout(() => {\\n      const { limit = 0, offset = 0 } = query;\\n      let rlt = [];\\n      if (offset <= TOTAL) {\\n        const len = Math.min(limit, TOTAL - offset);\\n        for (let i = 0; len - i > 0; i++) {\\n          rlt.push({ id: offset + i, name: `list-${offset + i}` });\\n        }\\n      }\\n      resolve({\\n        response: {\\n          resNames: rlt,\\n          paging: {\\n            totalCount: TOTAL\\n          }\\n        }\\n      });\\n    }, 500);\\n  });\\n  async function fetchDatas(isReloading, dQuery = {}) {\\n    const actionResult = await getDatas(dQuery);\\n    const items = actionResult.response.resNames;\\n    const totalCount = actionResult.response.paging.totalCount;\\n    const query = {\\n      ...dQuery,\\n      limit,\\n      offset: 0,\\n    };\\n    return {\\n      query,\\n      items,\\n      totalCount,\\n    }\\n  }\\n  const [item, setItem] = React.useState({ id: 1, name: 'list-1' });\\n  const onSelect = React.useCallback((item) => {\\n    setItem(item);\\n  }, [item, setItem]);\\n  const [clear, setClear] = React.useState(true);\\n  return (\\n    <div>\\n      <div>\\n        <Checkbox checked={clear} onChange={() => setClear(!clear)}>\\n          \\u5141\\u8BB8\\u6E05\\u9664\\n        </Checkbox>\\n      </div>\\n      <VirtualSelectBox\\n        onSelect={onSelect}\\n        item={item}\\n        fetchData={fetchDatas}\\n        clear={clear}\\n      />\\n    </div>\\n  )\\n}\\n\")), mdx(\"h3\", null, \"\\u6709\\u6570\\u636E\\u591A\\u9009\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"() => {\\n  const limit = 30;\\n  const TOTAL = 180;\\n  const getDatas = query => new Promise(resolve => {\\n    setTimeout(() => {\\n      const { limit = 0, offset = 0 } = query;\\n      let rlt = [];\\n      if (offset <= TOTAL) {\\n        const len = Math.min(limit, TOTAL - offset);\\n        for (let i = 0; len - i > 0; i++) {\\n          rlt.push({ id: offset + i, name: `list-${offset + i}` });\\n        }\\n      }\\n      resolve({\\n        response: {\\n          resNames: rlt,\\n          paging: {\\n            totalCount: TOTAL\\n          }\\n        }\\n      });\\n    }, 500);\\n  });\\n  async function fetchDatas(isReloading, dQuery = {}) {\\n    const actionResult = await getDatas(dQuery);\\n    const items = actionResult.response.resNames;\\n    const totalCount = actionResult.response.paging.totalCount;\\n    const query = {\\n      ...dQuery,\\n      limit,\\n      offset: 0,\\n    };\\n    return {\\n      query,\\n      items,\\n      totalCount,\\n    }\\n  }\\n  const [value, setValue] = React.useState([]);\\n  const onSelect = React.useCallback((item) => {\\n    setValue(item);\\n  }, [setValue]);\\n\\n  return (\\n    <div>\\n      <div>\\n        \\u9009\\u4E2D\\u8D44\\u6E90 IDs\\uFF1A{value.join(',')}\\n      </div>\\n      <VirtualSelectBox\\n        onSelect={onSelect}\\n        fetchData={fetchDatas}\\n        value={value}\\n        multi\\n      />\\n    </div>\\n  )\\n}\\n\")), mdx(\"h2\", null, \"API\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/components/virtual-select-box/"},"headings":[{"value":"限制条件","depth":2},{"value":"基本用法","depth":2},{"value":"代码演示","depth":2},{"value":"空数组","depth":3},{"value":"有数据单选","depth":3},{"value":"有数据多选","depth":3},{"value":"API","depth":2}],"frontmatter":{"title":"VirtualSelectBox 滚动下拉","date":"2019-08-28","author":"wangkailang"}}},"pageContext":{"slug":"/components/virtual-select-box/","previous":{"fields":{"slug":"/components/popover/"},"frontmatter":{"title":"Popovers 气泡卡片"}},"next":{"fields":{"slug":"/components/input-dropdown/"},"frontmatter":{"title":"InputDropdown Input 下拉框"}},"propDatas":{"node":{"fields":{"slug":"/VirtualSelectBox/"},"displayName":"VirtualSelectBox","props":[{"name":"item","type":{"name":"object","value":null},"defaultValue":null,"required":false,"description":{"text":"选中资源项"}},{"name":"fetchData","type":{"name":"func","value":null},"defaultValue":null,"required":true,"description":{"text":"获取异步数据的函数"}},{"name":"onSelect","type":{"name":"func","value":null},"defaultValue":null,"required":false,"description":{"text":"选择函数"}},{"name":"disabled","type":{"name":"bool","value":null},"defaultValue":{"value":"false"},"required":false,"description":{"text":"是否禁用操作"}},{"name":"rowHeight","type":{"name":"number","value":null},"defaultValue":{"value":"30"},"required":false,"description":{"text":"每项 select 的行高"}},{"name":"formatOption","type":{"name":"func","value":null},"defaultValue":null,"required":false,"description":{"text":"格式化 onSelect 输出数据"}},{"name":"isBtn","type":{"name":"bool","value":null},"defaultValue":{"value":"true"},"required":false,"description":{"text":"是否使用 button 格式 UI"}},{"name":"placeholder","type":{"name":"string","value":null},"defaultValue":{"value":"'请选择'"},"required":false,"description":{"text":"默认展示文案"}},{"name":"query","type":{"name":"object","value":null},"defaultValue":{"value":"{}"},"required":false,"description":{"text":"查询条件"}},{"name":"clear","type":{"name":"bool","value":null},"defaultValue":null,"required":false,"description":{"text":"清除"}},{"name":"defaultItem","type":null,"defaultValue":{"value":"{}"},"required":false,"description":{"text":""}}]}}}}}