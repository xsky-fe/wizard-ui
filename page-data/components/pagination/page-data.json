{"componentChunkName":"component---src-templates-components-post-js","path":"/components/pagination/","result":{"data":{"mdx":{"id":"5faf46a3-c05b-56ac-a556-9e6b19488fdf","excerpt":"采用分页的形式分隔长列表，每次只加载一个页面。 何时使用 当加载/渲染所有数据将花费很多时间时； 可切换页码浏览数据。 基本用法 默认展示 交互 <<  首页 >>  最后一页 <  上一页 >  下一页","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Pagination 分页\",\n  \"date\": \"2019-06-20T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u91C7\\u7528\\u5206\\u9875\\u7684\\u5F62\\u5F0F\\u5206\\u9694\\u957F\\u5217\\u8868\\uFF0C\\u6BCF\\u6B21\\u53EA\\u52A0\\u8F7D\\u4E00\\u4E2A\\u9875\\u9762\\u3002\"), mdx(\"h2\", null, \"\\u4F55\\u65F6\\u4F7F\\u7528\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5F53\\u52A0\\u8F7D/\\u6E32\\u67D3\\u6240\\u6709\\u6570\\u636E\\u5C06\\u82B1\\u8D39\\u5F88\\u591A\\u65F6\\u95F4\\u65F6\\uFF1B\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u53EF\\u5207\\u6362\\u9875\\u7801\\u6D4F\\u89C8\\u6570\\u636E\\u3002\")), mdx(\"h2\", null, \"\\u57FA\\u672C\\u7528\\u6CD5\"), mdx(\"h3\", null, \"\\u9ED8\\u8BA4\\u5C55\\u793A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Pagination\\n  items={10}\\n  activePage={2}\\n  ellipsis={false}\\n/>\\n\")), mdx(\"h3\", null, \"\\u4EA4\\u4E92\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<<\"), \" \\u9996\\u9875\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \">>\"), \" \\u6700\\u540E\\u4E00\\u9875\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<\"), \" \\u4E0A\\u4E00\\u9875\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \">\"), \" \\u4E0B\\u4E00\\u9875\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"() => {\\n  const totalPage = 100;\\n  const [ activePage, setPage ] = React.useState(10);\\n  const handlePageChange = page => setPage(page);\\n  const [ per, setPer ] = React.useState(5);\\n  return (\\n    <div>\\n      <Panel>\\n        {[5, 8, 10].map(p => (\\n          <Radio\\n            key={p}\\n            inline\\n            checked={p === per}\\n            value={p}\\n            onChange={() => {\\n              if (p !== per) {\\n                setPer(p);\\n              }\\n            }}\\n          >\\n            \\u5C55\\u793A {p} \\u9875\\n          </Radio>\\n        ))}\\n      </Panel>\\n      <p>\\u603B\\u5171 {totalPage} \\u9875\\uFF0C\\u5F53\\u524D\\u662F\\u7B2C {activePage} \\u9875\\u3002</p>\\n      <Pagination\\n        prev={activePage > 1}\\n        next={activePage < totalPage}\\n        first={activePage > 3}\\n        last={activePage < totalPage - 2}\\n        maxButtons={per}\\n        items={totalPage}\\n        activePage={activePage}\\n        onSelect={handlePageChange}\\n        ellipsis={false}\\n      />\\n    </div>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/components/pagination/"},"headings":[{"value":"何时使用","depth":2},{"value":"基本用法","depth":2},{"value":"默认展示","depth":3},{"value":"交互","depth":3}],"frontmatter":{"title":"Pagination 分页","date":"2019-06-20","author":null}}},"pageContext":{"slug":"/components/pagination/","previous":{"fields":{"slug":"/components/navigation/"},"frontmatter":{"title":"Navigation 导航栏"}},"next":{"fields":{"slug":"/components/dropdown-button/"},"frontmatter":{"title":"DropdownButton 下拉框"}},"propDatas":null}}}