"use strict";(self.webpackChunkwizard_ui=self.webpackChunkwizard_ui||[]).push([[2784],{"./stories/Tooltip.stories.tsx":function(__unused_webpack_module,exports,__webpack_require__){var _a,_b,_c,_d,_e,_f,_g,_h,_j,__assign=this&&this.__assign||function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Placement=exports.icon=exports.Basic=void 0;var react_1=__importDefault(__webpack_require__("./node_modules/react/index.js")),src_1=__webpack_require__("./src/index.ts"),meta={title:"DATA DISPLAY/Tooltip",component:src_1.Tooltip,argTypes:{children:{type:{required:!0}},onClick:{table:{type:{summary:"function"}}}}};exports.default=meta,exports.Basic={args:{children:"文字提示",placement:"right",label:react_1.default.createElement("span",null,"hover 试试")}},exports.icon={render:function(props){return react_1.default.createElement(react_1.default.Fragment,null,react_1.default.createElement(src_1.Tooltip,{placement:"right",style:{maxWidth:800},children:"默认图标"}),react_1.default.createElement("br",null),react_1.default.createElement(src_1.Tooltip,{label:react_1.default.createElement(src_1.Icon,{type:"edit-fill"}),style:{maxWidth:800},children:"编辑"}))}},exports.Placement={render:function(props){return react_1.default.createElement(react_1.default.Fragment,null,["top","right","bottom","left"].map((function(placement){return react_1.default.createElement(src_1.Tooltip,{placement,style:{maxWidth:800},label:react_1.default.createElement(src_1.Button,{style:{marginRight:20}},"Tooltip on ",placement)},"Tooltip on ",react_1.default.createElement("strong",null,placement),".")})))}},exports.Basic.parameters=__assign(__assign({},exports.Basic.parameters),{docs:__assign(__assign({},null===(_a=exports.Basic.parameters)||void 0===_a?void 0:_a.docs),{source:__assign({originalSource:"{\n  args: {\n    children: '文字提示',\n    placement: 'right',\n    label: <span>hover 试试</span>\n  }\n}"},null===(_c=null===(_b=exports.Basic.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),exports.icon.parameters=__assign(__assign({},exports.icon.parameters),{docs:__assign(__assign({},null===(_d=exports.icon.parameters)||void 0===_d?void 0:_d.docs),{source:__assign({originalSource:'{\n  render: props => <>\r\n      <Tooltip placement="right" style={{\n      maxWidth: 800\n    }} children="默认图标" />\r\n      <br />\r\n      <Tooltip label={<Icon type="edit-fill" />} style={{\n      maxWidth: 800\n    }} children="编辑" />\r\n    </>\n}'},null===(_f=null===(_e=exports.icon.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),exports.Placement.parameters=__assign(__assign({},exports.Placement.parameters),{docs:__assign(__assign({},null===(_g=exports.Placement.parameters)||void 0===_g?void 0:_g.docs),{source:__assign({originalSource:"{\n  render: props => {\n    return <>\r\n        {['top', 'right', 'bottom', 'left'].map(placement => <Tooltip placement={placement} style={{\n        maxWidth: 800\n      }} label={<Button style={{\n        marginRight: 20\n      }}>Tooltip on {placement}</Button>}>\r\n            Tooltip on <strong>{placement}</strong>.\r\n          </Tooltip>)}\r\n      </>;\n  }\n}"},null===(_j=null===(_h=exports.Placement.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})})}}]);